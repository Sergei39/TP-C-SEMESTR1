        -:    0:Source:/home/sergei/Projects/Projectc++/TP-C-SEMESTR1/iz-1/Google_tests/AbsoluteDateTest.cpp
        -:    0:Graph:/home/sergei/Projects/Projectc++/TP-C-SEMESTR1/iz-1/cmake-build-debug-coverage/Google_tests/CMakeFiles/Google_Tests_run.dir/AbsoluteDateTest.cpp.gcno
        -:    0:Data:/home/sergei/Projects/Projectc++/TP-C-SEMESTR1/iz-1/cmake-build-debug-coverage/Google_tests/CMakeFiles/Google_Tests_run.dir/AbsoluteDateTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "gtest/gtest.h"
        -:    2:
        -:    3:extern "C" {
        -:    4:#include "../include/logic.h"
        -:    5:}
        -:    6:
        -:    7:#define DELTA 0.0001
        -:    8:
        8:    9:TEST(AbsoluteDateTestSuite, ExampleDate_1){ // (0, 0),(0, 4),(3, 0) -> 6
        1:    9-block  0
        1:    9-block  1
        1:    9-block  2
        1:    9-block  3
        1:    9-block  4
    %%%%%:    9-block  5
    %%%%%:    9-block  6
    %%%%%:    9-block  7
    %%%%%:    9-block  8
    %%%%%:    9-block  9
    %%%%%:    9-block 10
        1:    9-block 11
        1:    9-block 12
        1:    9-block 13
        1:    9-block 14
        1:    9-block 15
        -:   10:
        1:   11:    const size_t LEN_MAS = 3;
        -:   12:
        1:   13:    float test_x_y[2][LEN_MAS] = {{0, 0, 3}, {0, 4, 0}};
        1:   14:    const float EXPECTED = 6;
        -:   15:
        -:   16:    float *test_x[LEN_MAS];
        -:   17:    float *test_y[LEN_MAS];
        4:   18:    for (int i = 0; i < LEN_MAS; i++)
        1:   18-block  0
        4:   18-block  1
        3:   18-block  2
        -:   19:    {
        3:   20:        test_x[i] = &test_x_y[0][i];
        3:   21:        test_y[i] = &test_x_y[1][i];
        -:   22:    }
        1:   23:    float *res = area_figure(test_x, test_y, LEN_MAS);
        1:   23-block  0
        -:   24:
        1:   25:    ASSERT_NEAR(EXPECTED, *res, DELTA);
        1:   25-block  0
        1:   25-block  1
    $$$$$:   25-block  2
    $$$$$:   25-block  3
    $$$$$:   25-block  4
    $$$$$:   25-block  5
        1:   25-block  6
        1:   25-block  7
        1:   25-block  8
    %%%%%:   25-block  9
    %%%%%:   25-block 10
    %%%%%:   25-block 11
    %%%%%:   25-block 12
    %%%%%:   25-block 13
    %%%%%:   25-block 14
        1:   26:    free(res);
        1:   26-block  0
    $$$$$:   26-block  1
        1:   26-block  2
        -:   27:}
        -:   28:
        8:   29:TEST(AbsoluteDateTestSuite, ExampleDate_2){ // (-2, -2),(-2, 2),(2, 2),(2, -2) -> 16
        1:   29-block  0
        1:   29-block  1
        1:   29-block  2
        1:   29-block  3
        1:   29-block  4
    %%%%%:   29-block  5
    %%%%%:   29-block  6
    %%%%%:   29-block  7
    %%%%%:   29-block  8
    %%%%%:   29-block  9
    %%%%%:   29-block 10
        1:   29-block 11
        1:   29-block 12
        1:   29-block 13
        1:   29-block 14
        1:   29-block 15
        1:   30:    const size_t LEN_MAS = 4;
        -:   31:
        1:   32:    float test_x_y[2][LEN_MAS] = {{-2, -2, 2, 2}, {-2, 2, 2, -2}};
        1:   33:    const float EXPECTED = 16;
        -:   34:
        -:   35:    float *test_x[LEN_MAS];
        -:   36:    float *test_y[LEN_MAS];
        5:   37:    for (int i = 0; i < LEN_MAS; i++)
        1:   37-block  0
        5:   37-block  1
        4:   37-block  2
        -:   38:    {
        4:   39:        test_x[i] = &test_x_y[0][i];
        4:   40:        test_y[i] = &test_x_y[1][i];
        -:   41:    }
        1:   42:    float *res = area_figure(test_x, test_y, LEN_MAS);
        1:   42-block  0
        -:   43:
        1:   44:    ASSERT_NEAR(EXPECTED, *res, DELTA);
        1:   44-block  0
        1:   44-block  1
    $$$$$:   44-block  2
    $$$$$:   44-block  3
    $$$$$:   44-block  4
    $$$$$:   44-block  5
        1:   44-block  6
        1:   44-block  7
        1:   44-block  8
    %%%%%:   44-block  9
    %%%%%:   44-block 10
    %%%%%:   44-block 11
    %%%%%:   44-block 12
    %%%%%:   44-block 13
    %%%%%:   44-block 14
        1:   45:    free(res);
        1:   45-block  0
    $$$$$:   45-block  1
        1:   45-block  2
        -:   46:}
        -:   47:
        8:   48:TEST(AbsoluteDateTestSuite, ExampleDate_3){ // (-2, -2),(-1, 1),(1, 3),(3, 3),(5, 1),(2, -1) -> 19.5
        1:   48-block  0
        1:   48-block  1
        1:   48-block  2
        1:   48-block  3
        1:   48-block  4
    %%%%%:   48-block  5
    %%%%%:   48-block  6
    %%%%%:   48-block  7
    %%%%%:   48-block  8
    %%%%%:   48-block  9
    %%%%%:   48-block 10
        1:   48-block 11
        1:   48-block 12
        1:   48-block 13
        1:   48-block 14
        1:   48-block 15
        1:   49:    const size_t LEN_MAS = 6;
        -:   50:
        1:   51:    float test_x_y[2][LEN_MAS] = {{-2, -1, 1, 3, 5, 2}, {-2, 1, 3, 3, 1, -1}};
        1:   52:    const float EXPECTED = 19.5;
        -:   53:
        -:   54:    float *test_x[LEN_MAS];
        -:   55:    float *test_y[LEN_MAS];
        7:   56:    for (int i = 0; i < LEN_MAS; i++)
        1:   56-block  0
        7:   56-block  1
        6:   56-block  2
        -:   57:    {
        6:   58:        test_x[i] = &test_x_y[0][i];
        6:   59:        test_y[i] = &test_x_y[1][i];
        -:   60:    }
        1:   61:    float *res = area_figure(test_x, test_y, LEN_MAS);
        1:   61-block  0
        -:   62:
        1:   63:    ASSERT_NEAR(EXPECTED, *res, DELTA);
        1:   63-block  0
        1:   63-block  1
    $$$$$:   63-block  2
    $$$$$:   63-block  3
    $$$$$:   63-block  4
    $$$$$:   63-block  5
        1:   63-block  6
        1:   63-block  7
        1:   63-block  8
    %%%%%:   63-block  9
    %%%%%:   63-block 10
    %%%%%:   63-block 11
    %%%%%:   63-block 12
    %%%%%:   63-block 13
    %%%%%:   63-block 14
        1:   64:    free(res);
        1:   64-block  0
    $$$$$:   64-block  1
        1:   64-block  2
        -:   65:}
        -:   66:
        -:   67:
        8:   68:TEST(AbsoluteDateTestSuite, ExampleDate_4){ // (1, 1),(3, 3),(5, 5) -> 0 // на одной прямой
        1:   68-block  0
        1:   68-block  1
        1:   68-block  2
        1:   68-block  3
        1:   68-block  4
    %%%%%:   68-block  5
    %%%%%:   68-block  6
    %%%%%:   68-block  7
    %%%%%:   68-block  8
    %%%%%:   68-block  9
    %%%%%:   68-block 10
        1:   68-block 11
        1:   68-block 12
        1:   68-block 13
        1:   68-block 14
        1:   68-block 15
        1:   69:    const size_t LEN_MAS = 3;
        1:   70:    float test_x_y[2][LEN_MAS] = {{1, 3, 5}, {1, 3, 5}};
        1:   71:    const auto EXPECTED = 0;
        -:   72:
        -:   73:    float *test_x[LEN_MAS];
        -:   74:    float *test_y[LEN_MAS];
        4:   75:    for (int i = 0; i < LEN_MAS; i++)
        1:   75-block  0
        4:   75-block  1
        3:   75-block  2
        -:   76:    {
        3:   77:        test_x[i] = &test_x_y[0][i];
        3:   78:        test_y[i] = &test_x_y[1][i];
        -:   79:    }
        -:   80:
        1:   81:    float *res = area_figure(test_x, test_y, LEN_MAS);
        1:   81-block  0
        -:   82:
        1:   83:    ASSERT_NEAR(EXPECTED, *res, DELTA);
        1:   83-block  0
        1:   83-block  1
    $$$$$:   83-block  2
    $$$$$:   83-block  3
    $$$$$:   83-block  4
    $$$$$:   83-block  5
        1:   83-block  6
        1:   83-block  7
        1:   83-block  8
    %%%%%:   83-block  9
    %%%%%:   83-block 10
    %%%%%:   83-block 11
    %%%%%:   83-block 12
    %%%%%:   83-block 13
    %%%%%:   83-block 14
        1:   84:    free(res);
        1:   84-block  0
    $$$$$:   84-block  1
        1:   84-block  2
        -:   85:}
        -:   86:
        -:   87:
        8:   88:TEST(AbsoluteDateTestSuite, IncorrectDate_1){ // (-2, -2),(-1, 1),(1, 3),(3, 3),(5, 1),(NULL, -1) -> NULL
        1:   88-block  0
        1:   88-block  1
        1:   88-block  2
        1:   88-block  3
        1:   88-block  4
    %%%%%:   88-block  5
    %%%%%:   88-block  6
    %%%%%:   88-block  7
    %%%%%:   88-block  8
    %%%%%:   88-block  9
    %%%%%:   88-block 10
        1:   88-block 11
        1:   88-block 12
        1:   88-block 13
        1:   88-block 14
        1:   88-block 15
        1:   89:    const size_t LEN_MAS = 6;
        1:   90:    float test_x_y[2][LEN_MAS] = {{-2, -1, 1, 3, 5, 2}, {-2, 1, 3, 3, 1, -1}};
        1:   91:    const auto EXPECTED = nullptr;
        -:   92:
        -:   93:    float *test_x[LEN_MAS];
        -:   94:    float *test_y[LEN_MAS];
        7:   95:    for (int i = 0; i < LEN_MAS; i++)
        1:   95-block  0
        7:   95-block  1
        6:   95-block  2
        -:   96:    {
        6:   97:        test_x[i] = &test_x_y[0][i];
        6:   98:        test_y[i] = &test_x_y[1][i];
        -:   99:    }
        1:  100:    test_x[LEN_MAS - 1] = nullptr;
        1:  101:    test_y[LEN_MAS - 1] = &test_x_y[1][LEN_MAS - 1];
        -:  102:
        1:  103:    float *res = area_figure(test_x, test_y, LEN_MAS);
        1:  103-block  0
        -:  104:
        1:  105:    ASSERT_EQ(EXPECTED, res);
        1:  105-block  0
        1:  105-block  1
    $$$$$:  105-block  2
    $$$$$:  105-block  3
    $$$$$:  105-block  4
    $$$$$:  105-block  5
        1:  105-block  6
        1:  105-block  7
        1:  105-block  8
        1:  105-block  9
    $$$$$:  105-block 10
        1:  105-block 11
    %%%%%:  105-block 12
    %%%%%:  105-block 13
    %%%%%:  105-block 14
    %%%%%:  105-block 15
    %%%%%:  105-block 16
    %%%%%:  105-block 17
        -:  106:}
        -:  107:
        8:  108:TEST(AbsoluteDateTestSuite, IncorrectDate_2){ // (-0.5, 0.43),(-1, 1) -> NULL
        1:  108-block  0
        1:  108-block  1
        1:  108-block  2
        1:  108-block  3
        1:  108-block  4
    %%%%%:  108-block  5
    %%%%%:  108-block  6
    %%%%%:  108-block  7
    %%%%%:  108-block  8
    %%%%%:  108-block  9
        1:  108-block 10
        1:  108-block 11
        1:  108-block 12
        1:  108-block 13
        1:  108-block 14
        1:  109:    const size_t LEN_MAS = 2;
        1:  110:    float test_x_y[2][LEN_MAS] = {{-0.5, -1}, {0.43, 1}};
        1:  111:    const auto EXPECTED = nullptr;
        -:  112:
        -:  113:    float *test_x[LEN_MAS];
        -:  114:    float *test_y[LEN_MAS];
        3:  115:    for (int i = 0; i < LEN_MAS; i++)
        1:  115-block  0
        3:  115-block  1
        2:  115-block  2
        -:  116:    {
        2:  117:        test_x[i] = &test_x_y[0][i];
        2:  118:        test_y[i] = &test_x_y[1][i];
        -:  119:    }
        -:  120:
        1:  121:    float *res = area_figure(test_x, test_y, LEN_MAS);
        1:  121-block  0
        -:  122:
        1:  123:    ASSERT_EQ(EXPECTED, res);
        1:  123-block  0
        1:  123-block  1
    $$$$$:  123-block  2
    $$$$$:  123-block  3
    $$$$$:  123-block  4
    $$$$$:  123-block  5
        1:  123-block  6
        1:  123-block  7
        1:  123-block  8
        1:  123-block  9
    $$$$$:  123-block 10
        1:  123-block 11
    %%%%%:  123-block 12
    %%%%%:  123-block 13
    %%%%%:  123-block 14
    %%%%%:  123-block 15
    %%%%%:  123-block 16
    %%%%%:  123-block 17
        4:  124:}
        1:  124-block  0
        1:  124-block  1
        1:  124-block  2
        1:  124-block  3
        1:  124-block  4
        1:  124-block  5
