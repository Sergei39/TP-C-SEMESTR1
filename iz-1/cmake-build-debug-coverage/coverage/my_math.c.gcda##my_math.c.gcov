        -:    0:Source:/home/sergei/Projects/Projectc++/TP-C-SEMESTR1/iz-1/src/my_math.c
        -:    0:Graph:/home/sergei/Projects/Projectc++/TP-C-SEMESTR1/iz-1/cmake-build-debug-coverage/CMakeFiles/iz-1.dir/src/my_math.c.gcno
        -:    0:Data:/home/sergei/Projects/Projectc++/TP-C-SEMESTR1/iz-1/cmake-build-debug-coverage/CMakeFiles/iz-1.dir/src/my_math.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
       44:    1:double my_sqrt(double v){
       44:    1-block  0
       44:    2:    const double delta = 1e-7;
        -:    3:
       44:    4:    double L = 0.0, R = v;
       44:    5:    double M = (L + R) /2.0;
     1254:    6:    while(R - L > delta){
       44:    6-block  0
     1254:    6-block  1
     1210:    7:        if(M * M <= v){
     1210:    7-block  0
      499:    8:            L = M;
      499:    8-block  0
        -:    9:        }
        -:   10:        else{
      711:   11:            R = M;
      711:   11-block  0
        -:   12:        }
     1210:   13:        M = (L + R)/2.0;
     1210:   13-block  0
        -:   14:    }
       44:   15:    return R;
       44:   15-block  0
        -:   16:}
        -:   17:
       66:   18:double my_pow(double value, int st) {
       66:   18-block  0
       66:   19:    double  result = 1;
      198:   20:    for(int i = 0; i < st; i++)
       66:   20-block  0
      132:   20-block  1
      198:   20-block  2
      132:   21:        result *= value;
        -:   22:
       66:   23:    return result;
       66:   23-block  0
        -:   24:}
